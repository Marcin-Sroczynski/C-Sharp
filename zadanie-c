string[][] userEnteredValues = new string[][]                   string[][] userEnteredValues = new string[][]
{                                                               {
            new string[] { "1", "2", "3"},                                  new string[] { "1", "2", "3"},
            new string[] { "1", "two", "3"},                                new string[] { "1", "two", "3"},
            new string[] { "0", "1", "2"}                                   new string[] { "0", "1", "2"}
};                                                              };

string overallStatusMessage = "";                             | try
                                                              <
overallStatusMessage = Workflow1(userEnteredValues);          <
                                                              <
if (overallStatusMessage == "operating procedure complete")   <
{                                                               {
                                                              >     Workflow1(userEnteredValues);
    Console.WriteLine("'Workflow1' completed successfully.");       Console.WriteLine("'Workflow1' completed successfully.");
                                                              >
}                                                               }
else                                                          | catch (DivideByZeroException ex)
{                                                               {
    Console.WriteLine("An error occurred during 'Workflow1'."       Console.WriteLine("An error occurred during 'Workflow1'."
    Console.WriteLine(overallStatusMessage);                  |     Console.WriteLine(ex.Message);
}                                                               }

static string Workflow1(string[][] userEnteredValues)         | static void Workflow1(string[][] userEnteredValues)
{                                                               {
    string operationStatusMessage = "good";                   <
    string processStatusMessage = "";                         <
                                                              <
    foreach (string[] userEntries in userEnteredValues)             foreach (string[] userEntries in userEnteredValues)
    {                                                               {
        processStatusMessage = Process1(userEntries);         |         try
                                                              <
        if (processStatusMessage == "process complete")       <
        {                                                               {
                                                              >             Process1(userEntries);
            Console.WriteLine("'Process1' completed successfu               Console.WriteLine("'Process1' completed successfu
            Console.WriteLine();                                            Console.WriteLine();
        }                                                               }
        else                                                  |         catch (FormatException ex)
        {                                                               {
            Console.WriteLine("'Process1' encountered an issu               Console.WriteLine("'Process1' encountered an issu
            Console.WriteLine(processStatusMessage);          |             Console.WriteLine(ex.Message);
            Console.WriteLine();                                            Console.WriteLine();
            operationStatusMessage = processStatusMessage;    <
        }                                                               }
    }                                                               }
                                                              <
    if (operationStatusMessage == "good")                     <
    {                                                         <
        operationStatusMessage = "operating procedure complet <
    }                                                         <
                                                              <
    return operationStatusMessage;                            <
}                                                               }

static string Process1(String[] userEntries)                  | static void Process1(String[] userEntries)
{                                                               {
    string processStatus = "clean";                           <
    string returnMessage = "";                                <
    int valueEntered;                                               int valueEntered;

    foreach (string userValue in userEntries)                       foreach (string userValue in userEntries)
    {                                                               {
        bool integerFormat = int.TryParse(userValue, out valu           bool integerFormat = int.TryParse(userValue, out valu

        if (integerFormat == true)                                      if (integerFormat == true)
        {                                                               {
            if (valueEntered != 0)                                          if (valueEntered != 0)
            {                                                               {
                checked                                                         checked
                {                                                               {
                    int calculatedValue = 4 / valueEntered;                         int calculatedValue = 4 / valueEntered;
                }                                                               }
            }                                                               }
            else                                                            else
            {                                                               {
                returnMessage = "Invalid data. User input val |                 throw new DivideByZeroException("Invalid data
                processStatus = "error";                      <
            }                                                               }
        }                                                               }
        else                                                            else
        {                                                               {
            returnMessage = "Invalid data. User input values  |             throw new FormatException("Invalid data. User inp
            processStatus = "error";                          <
        }                                                               }
    }                                                               }
                                                              <
    if (processStatus == "clean")                             <
    {                                                         <
        returnMessage = "process complete";                   <
    }                                                         <
                                                              <
    return returnMessage;                                     <
}                                                               }




